from math import *

def test(n):
    return [(i, j, i ** j) for i in range(2, n + 1) for j in range(2, n + 1)]
    
def test2():    
    for i in sorted(test(20), key=lambda x: x[2]):
        aroot = i[0] ** 0.5
        if floor(aroot) == ceil(aroot):
            print('duplicate', i)
        else:
            print(i)

from itertools import repeat
def factorization_to_unique(x):
    d = [[] for i in repeat(None, x)]
    
    for j in range(2, x + 1, 2):
        d[j - 1].append(2)
                
    for i in range(2, x, 2):
    #for i in range(1, x):
        if not d[i]:
            for j in range((i + 1) * 2, x + 1, i + 1):
                d[j - 1].append(i + 1)
            d[i].append(i + 1)  

    return d
            
def solve(n):
    res = (n - 1) ** 2
    facts = factorization_to_unique(n)
    for i in range(2, n + 1):
        fact = facts[i - 1]
        
    return len(set(i ** j for i in range(2, n + 1) for j in range(2, n + 1)))

'''
i 
  (i - 1) ** 2
    solve(i)
      (i - 1) ** 2 - solve(i)
2 1 1 0
3 4 4 0
4 9 8 1
5 16 15 1
6 25 23 2
7 36 34 2
8 49 44 5
9 64 54 10
10 81 69 12
11 100 88 12
12 121 106 15
13 144 129 15
14 169 152 17
15 196 177 19
16 225 195 30
17 256 226 30
18 289 256 33
19 324 291 33
20 361 324 37
21 400 361 39
22 441 399 42
23 484 442 42
24 529 483 46
25 576 519 57
26 625 564 61
27 676 600 76
28 729 648 81
29 784 703 81
30 841 755 86
31 900 814 86
32 961 856 105
33 1024 915 109
34 1089 976 113
35 1156 1039 117
36 1225 1085 140
37 1296 1156 140
38 1369 1224 145
39 1444 1295 149
40 1521 1365 156
41 1600 1444 156
42 1681 1519 162
43 1764 1602 162
44 1849 1681 168
45 1936 1762 174
46 2025 1846 179
47 2116 1937 179
48 2209 2023 186
49 2304 2095 209
50 2401 2184 217
51 2500 2279 221
52 2601 2373 228
53 2704 2476 228
54 2809 2574 235
55 2916 2677 239
56 3025 2779 246
57 3136 2886 250
58 3249 2993 256
59 3364 3108 256
60 3481 3216 265
61 3600 3335 265
62 3721 3450 271
63 3844 3569 275
64 3969 3648 321
65 4096 3771 325
66 4225 3890 335
67 4356 4021 335
68 4489 4147 342
69 4624 4277 347
70 4761 4406 355
71 4900 4545 355
72 5041 4676 365
73 5184 4819 365
74 5329 4957 372
75 5476 5098 378
76 5625 5240 385
77 5776 5391 385
78 5929 5534 395
79 6084 5689 395
80 6241 5838 403
81 6400 5946 454
82 6561 6099 462
83 6724 6262 462
84 6889 6416 473
85 7056 6579 477
86 7225 6740 485
87 7396 6906 490
88 7569 7070 499
89 7744 7245 499
90 7921 7412 509
91 8100 7591 509
92 8281 7763 518
93 8464 7941 523
94 8649 8118 531
95 8836 8301 535
96 9025 8479 546
97 9216 8670 546
98 9409 8855 554
99 9604 9045 559
100 9801 9183 618
'''